{"version":3,"sources":["components/error-indicator/pokeball_PNG24.webp","services/pokeapi-service.js","components/header/index.js","components/header/header.js","components/error-indicator/index.js","components/error-indicator/error-indicator.js","components/error-boundry/index.js","components/error-boundry/error-boundry.js","components/spinner/index.js","components/spinner/spinner.js","components/pokemon-evolve/index.js","components/pokemon-evolve/pokemon-evolve.js","components/pokemon-detalis/index.js","components/pokemon-detalis/pokemon-details.js","components/show-more/show-more.js","components/item-list/index.js","components/item-list/item-list.js","components/search-list/index.js","components/search-list/search-list.js","components/pages/pokemon-page.js","components/random-pokemon/random-pokemon.js","components/random-pokemon/index.js","components/pages/random-pokemon-page.js","components/pokemon-service-context/pokemon-service-context.js","components/app/index.js","components/app/app.js","index.js"],"names":["module","exports","PokeapiService","_apiBase","_transformId","pokemon","pokemonId","id","evolveId","_extractId","evolution_chain","url","_transformPokemonData","pokemonData","name","height","weight","abilities","ability","types","type","_transformAllPokemon","allPokemon","_transformTreeEvolve","evolve","small","chain","species","medium","evolves_to","large","smallId","mediumId","largeId","_transformTwoEvolve","_transformOneEvolve","mall","fetch","this","res","ok","Error","status","json","getResource","results","map","length","checkEvolve","item","match","Header","className","src","width","alt","to","Component","ErrorIndicator","icon","ErrorBoundry","state","hasError","setState","props","children","Spinner","PokemonEvolve","pokeapiService","loading","onEvolveLoaded","updateEvolve","getEvolve","then","prevProps","undefined","heihgt","PokemonDetails","onPokemonState","giveSelectedPokemon","selectedId","getPokemonData","catch","error","ShowMore","onClick","morePokemon","ItemList","showItems","pokemonArr","pokemonList","pokemonNames","term","showMorePokemon","slice","givePokemonName","arr","key","onPokemonSelected","href","items","renderItems","SearchList","onSearchChange","e","target","value","placeholder","onChange","PokemonPage","pokemonSelected","onIdLoaded","givePokemonId","getPokemonEvolveId","onError","search","filter","toLowerCase","indexOf","_","prevState","getAllPokemon","console","log","visiblesItems","RandomPokemon","onPokemonDataLoaded","updatePokemonData","hasData","errorMessage","spinner","content","PokemonView","Fragment","RandomPokemonPage","Math","floor","random","interval","setInterval","clearInterval","React","createContext","PokeServiceProvider","Provider","Consumer","App","err","path","component","exact","render","ReactDOM","document","getElementById"],"mappings":"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","file":"static/js/main.a4b6913a.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/pokeball_PNG24.058cc191.webp\";","export default class PokeapiService {\r\n\r\n    _apiBase = 'https://pokeapi.co/api/v2/';\r\n\r\n    async getResource(url) {\r\n        const res = await fetch(`${this._apiBase}${url}`);\r\n\r\n        if(!res.ok) {\r\n            throw new Error(`Could not fetch ${url}` + \r\n            `, received ${res.status}`)\r\n        }\r\n        return await res.json();\r\n    };\r\n\r\n    async getAllPokemon() {                             // Get All Pokemon\r\n        const res = await this.getResource(`pokemon/?offset=0&limit=700`); // 809\r\n        return res.results.map(this._transformAllPokemon);\r\n    }\r\n\r\n    async getPokemonEvolveId(id) {                              // Get evolve id\r\n        const pokemon = await this.getResource(`pokemon-species/${id}/`);\r\n        return this._transformId(pokemon);\r\n    }\r\n\r\n    async getEvolve(id) {                               // Get Evolve pokemon\r\n        const evolve = await this.getResource(`evolution-chain/${id}/`);\r\n        if(evolve.chain.evolves_to.length === 1) {\r\n            const checkEvolve = (evolve.chain.evolves_to[0].evolves_to).length;\r\n            if(checkEvolve === 2) {\r\n                return this._transformTreeEvolve(evolve, 1);    \r\n            } else if( checkEvolve ===  1 ) {\r\n                return this._transformTreeEvolve(evolve, 0);\r\n            } else if ( checkEvolve === 0 ) {\r\n                return this._transformTwoEvolve(evolve);\r\n            }\r\n        } else {\r\n            return this._transformOneEvolve(evolve);\r\n        }\r\n    }\r\n\r\n    async getPokemonData(id) {                              // Get Pokemon data\r\n        const pokemonData = await this.getResource(`pokemon/${id}/`);\r\n        return this._transformPokemonData(pokemonData);\r\n    }\r\n\r\n    _extractId(item) {                           // Get id in URL\r\n        const idRegExp = /\\/([0-9]*)\\/$/;\r\n        return item.match(idRegExp)[1];\r\n    }\r\n\r\n    _transformId = (pokemon) => {                  // Give data in pokemon\r\n        return {\r\n            pokemonId: pokemon.id,\r\n            evolveId: this._extractId(pokemon.evolution_chain.url),\r\n        };\r\n    };\r\n\r\n    _transformPokemonData = (pokemonData) => {\r\n        return {\r\n            name: pokemonData.name,\r\n            height: pokemonData.height,\r\n            weight: pokemonData.weight,\r\n            abilities: pokemonData.abilities[0].ability.name,\r\n            types: pokemonData.types[0].type.name,\r\n        };\r\n    };\r\n\r\n    _transformAllPokemon = (allPokemon) => {\r\n        return {\r\n            id: this._extractId(allPokemon.url),\r\n            name: allPokemon.name\r\n        };\r\n    };\r\n\r\n    _transformTreeEvolve = (evolve, id) => {                    // Give data in Evolve\r\n        return {\r\n            small: evolve.chain.species.name,\r\n            medium: evolve.chain.evolves_to[0].species.name,\r\n            large: evolve.chain.evolves_to[0].evolves_to[id].species.name,\r\n            smallId: this._extractId(evolve.chain.species.url),\r\n            mediumId: this._extractId(evolve.chain.evolves_to[0].species.url),\r\n            largeId: this._extractId(evolve.chain.evolves_to[0].evolves_to[id].species.url),\r\n        };\r\n    };\r\n\r\n    _transformTwoEvolve = (evolve) => {                    // Give data in Evolve\r\n        return {\r\n            small: evolve.chain.species.name,\r\n            medium: evolve.chain.evolves_to[0].species.name,\r\n            smallId: this._extractId(evolve.chain.species.url),\r\n            mediumId: this._extractId(evolve.chain.evolves_to[0].species.url),\r\n        };\r\n    };\r\n\r\n    _transformOneEvolve = (evolve) => {\r\n        return {\r\n            mall: evolve.chain.species.name,\r\n            smallId: this._extractId(evolve.chain.species.url),\r\n        }\r\n    };\r\n}","import Header from './header';\r\n\r\nexport default Header","import React, {Component} from 'react'\r\nimport { Link } from 'react-router-dom'\r\nimport './header.css'\r\n\r\nexport default class Header extends Component {\r\n\r\n    render() {\r\n\r\n        // const {randomId} = this.props;\r\n        return(\r\n            <div className=\"header d-flex\">\r\n                <h2>Pokedex</h2>\r\n                <div className=\"image-logo\">\r\n                    <img src={`https://raw.githubusercontent.com/PokeAPI/sprites/master/sprites/pokemon/25.png`} width=\"75px\" height=\"75px\" alt=\"pokemon\"/>\r\n                </div>\r\n                <ul>\r\n                    <li className=\"nav-item\">\r\n                        <Link to=\"/\">Main</Link>\r\n                    </li>\r\n                    <li className=\"nav-item\">\r\n                        <Link to=\"/pokemons/\">Pokemons</Link>\r\n                    </li>\r\n                    <li className=\"nav-item\">\r\n                        <Link to=\"/about/\">About</Link>\r\n                    </li>\r\n                </ul>\r\n            </div>\r\n        );\r\n    };\r\n};","import ErrorIndicator from './error-indicator';\r\n\r\nexport default ErrorIndicator;","import React from 'react'\r\nimport './error-indicator.css'\r\nimport icon from './pokeball_PNG24.webp'\r\n\r\nconst ErrorIndicator = () => {\r\n    return (\r\n        <div className=\"error-text\">\r\n            <div className=\"error-title\">\r\n                <img src={ icon } alt=\"error icon\"/>\r\n                <h2>BOOM!</h2>\r\n            </div>\r\n            <div className=\"error-pretitle\">\r\n                <p>Something has gone tembily</p>\r\n                <p>(but we already sent pokemons to fix it)</p>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default ErrorIndicator","import ErrorBoundry from './error-boundry'\r\n\r\nexport default ErrorBoundry","import React, {Component} from 'react'\r\nimport ErrorIndicator from '../error-indicator'\r\n\r\nexport default class ErrorBoundry extends Component {\r\n\r\n    state = {\r\n        hasError: false\r\n    }\r\n\r\n    componentDidCatch() {\r\n        this.setState({\r\n            hasError: true\r\n        })\r\n    }\r\n\r\n    render() {\r\n        if(this.state.hasError) {\r\n            return <ErrorIndicator />\r\n        }\r\n\r\n        return this.props.children;\r\n    }\r\n}","import Spinner from './spinner';\r\n\r\nexport default Spinner;","import React from 'react';\r\nimport './spinner.css'\r\n\r\nconst Spinner = () => {\r\n    return(\r\n        <div className=\"lds-css ng-scope\">\r\n            <div className=\"lds-double-ring\">\r\n                <div></div>\r\n                <div></div>\r\n                <div><div></div></div>\r\n                <div><div></div></div>\r\n            </div>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default Spinner","import PokemonEvolve from './pokemon-evolve';\r\n\r\nexport default PokemonEvolve;","import React, {Component} from 'react';\r\nimport './pokemon-evolve.css';\r\nimport Spinner from '../spinner';\r\nimport PokeapiService from '../../services/pokeapi-service'\r\n\r\nexport default class PokemonEvolve extends Component {\r\n\r\n    pokeapiService = new PokeapiService();\r\n\r\n    state = {\r\n        id: null,\r\n        evolve: {},\r\n        loading: true,\r\n    }\r\n\r\n    componentDidMount() {\r\n        this.updateEvolve();\r\n    }\r\n\r\n    componentDidUpdate(prevProps) {\r\n        if (this.props.evolveId !== prevProps.evolveId) {\r\n          this.updateEvolve();\r\n        }\r\n    }\r\n\r\n    onEvolveLoaded = (evolve) => {\r\n        this.setState({\r\n            evolve,\r\n            loading: false\r\n        });\r\n    }\r\n\r\n    updateEvolve = () => {\r\n        const id = this.props.evolveId;\r\n        this.pokeapiService\r\n            .getEvolve(id)\r\n            .then(this.onEvolveLoaded)\r\n    }\r\n\r\n    render() {\r\n        \r\n        const { loading } = this.state;\r\n\r\n        if( loading ) {\r\n            return <Spinner/>\r\n        }\r\n\r\n        const { evolve } = this.state;\r\n\r\n        const { small, medium, large, smallId, mediumId, largeId } = evolve;\r\n\r\n        if(medium === undefined) {\r\n            return (\r\n                <div className=\"pokemon-evolve card\">\r\n                    <h2>Evolution</h2>\r\n                    <div className=\"pokemon-evolve\">\r\n                        <div className=\"first-evolve evolve\">\r\n                            <h3>{ small }</h3>\r\n                            <img src={`https://pokeres.bastionbot.org/images/pokemon/${smallId}.png`}  width=\"150px\" heihgt=\"150px\" alt=\"evolve\"/>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            )\r\n        }\r\n\r\n        if(large === undefined) {\r\n            return (\r\n                <div className=\"pokemon-evolve card\">\r\n                    <h2>Evolution</h2>\r\n                    <div className=\"pokemon-evolve\">\r\n                        <div className=\"first-evolve evolve\">\r\n                            <h3>{ small }</h3>\r\n                            <img src={`https://pokeres.bastionbot.org/images/pokemon/${smallId}.png`}  width=\"150px\" heihgt=\"150px\" alt=\"evolve\"/>\r\n                        </div>\r\n                        <div className=\"first-evolve evolve\">\r\n                            <h3>{ medium }</h3>\r\n                            <img src={`https://pokeres.bastionbot.org/images/pokemon/${mediumId}.png`}  width=\"150px\" heihgt=\"150px\" alt=\"evolve\"/>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            )\r\n        }\r\n\r\n        return (\r\n            <div className=\"pokemon-evolve card\">\r\n                <h2>Evolution</h2>\r\n                <div className=\"pokemon-evolve\">\r\n                    <div className=\"first-evolve evolve\">\r\n                        <h3>{ small }</h3>\r\n                        <img src={`https://pokeres.bastionbot.org/images/pokemon/${smallId}.png`}  width=\"150px\" heihgt=\"150px\" alt=\"evolve\"/>\r\n                    </div>\r\n                    <div className=\"first-evolve evolve\">\r\n                        <h3>{ medium }</h3>\r\n                        <img src={`https://pokeres.bastionbot.org/images/pokemon/${mediumId}.png`}  width=\"150px\" heihgt=\"150px\" alt=\"evolve\"/>\r\n                    </div>\r\n                    <div className=\"first-evolve evolve\">\r\n                        <h3>{ large }</h3>\r\n                        <img src={`https://pokeres.bastionbot.org/images/pokemon/${largeId}.png`}  width=\"150px\" heihgt=\"150px\" alt=\"evolve\"/>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        )  \r\n    }\r\n}","import PokemonDetails from './pokemon-details';\r\n\r\nexport default PokemonDetails;","import React, { Component } from \"react\";\r\nimport PokeapiService from '../../services/pokeapi-service'\r\nimport \"./pokemon-details.css\";\r\n\r\nexport default class PokemonDetalis extends Component {\r\n  \r\n  pokeapiService = new PokeapiService();\r\n\r\n  state = {\r\n    id: null,\r\n    pokemonData: null\r\n  }\r\n\r\n  componentDidMount() {\r\n    this.giveSelectedPokemon();\r\n  }\r\n\r\n  componentDidUpdate(prevProps) {\r\n    if (this.props.selectedId !== prevProps.selectedId) {\r\n      this.giveSelectedPokemon();\r\n    }\r\n  }\r\n\r\n  onPokemonState = (pokemonData) => {\r\n    this.setState({\r\n      pokemonData\r\n    })\r\n  }\r\n\r\n  giveSelectedPokemon = () => {\r\n    const id = this.props.selectedId;\r\n    this.setState({id});\r\n    this.pokeapiService\r\n        .getPokemonData(id)\r\n        .then(this.onPokemonState)\r\n        .catch(this.props.error);\r\n  }\r\n\r\n  render() {\r\n    \r\n    const { id, pokemonData } = this.state;\r\n\r\n    if(!pokemonData) {\r\n      return \"Choose Your Pokemon\";\r\n    }\r\n\r\n    const { name, height, weight, abilities, types } = pokemonData;\r\n    return (\r\n      <div className=\"pokemon-details\" id=\"pokemon-details\">\r\n        <div className=\"pokemon-img\">\r\n          <img src={`https://pokeres.bastionbot.org/images/pokemon/${id}.png`} width=\"150px\" heihgt=\"150px\" alt=\"Pokemon\"/>\r\n        </div>\r\n        <div className=\"pokemon-detalis\">\r\n          <h4>Name: {name}</h4>\r\n          <ul>\r\n            <li>Height: {height}</li>\r\n            <li>Width: {weight}</li>\r\n            <li>Abilities: <span className=\"text-warning\">{abilities}</span></li>\r\n            <li>Types: <span className=\"text-warning\">{types}</span></li>\r\n          </ul>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n  \r\n}\r\n","import React, {Component} from 'react';\r\nimport './show-more.css';\r\n\r\nexport default class ShowMore extends Component {\r\n    render() {\r\n        return (\r\n            <button className=\"show-more\"\r\n                    onClick={() => this.props.morePokemon()}>\r\n                Show Pokemon\r\n            </button>\r\n        )\r\n    }\r\n}","import ItemList from './item-list'\r\n\r\nexport default ItemList;","import React, {Component} from 'react'\r\nimport \"./item-list.css\";\r\nimport PokeapiService from '../../services/pokeapi-service'\r\nimport { ShowMore } from '../show-more'\r\nexport default class ItemList extends Component {\r\n\r\n  pokeapiService = new PokeapiService();\r\n\r\n  state = {\r\n    showItems: null,\r\n    pokemonArr: null,\r\n    pokemonList: null,\r\n    pokemonNames: null,\r\n    term: \"\",\r\n  }\r\n\r\n  showMorePokemon = () => {\r\n    this.setState(({ showItems, pokemonList }) => {\r\n      pokemonList = this.props.pokemonList;\r\n      showItems += 50;\r\n      const newArr = pokemonList.slice(0, showItems);\r\n      return {\r\n        showItems: showItems,\r\n        pokemonArr: newArr,\r\n      }\r\n    });\r\n  }\r\n\r\n  givePokemonName = () => {\r\n    this.setState(({ pokemonList }) => {\r\n      const namesArr = pokemonList.map(({name}) => {\r\n        return name;\r\n      });\r\n      return {\r\n        pokemonNames: namesArr,\r\n      }\r\n    });\r\n  }\r\n\r\n  renderItems(arr) {\r\n    return arr.map(({id, name}) => {\r\n      return (\r\n        <li className=\"pokemon-item col-md-3\"\r\n            key={id}\r\n            onClick={() => this.props.onPokemonSelected(id)}>\r\n          <div className=\"item\">\r\n            <a href=\"#pokemon-details\">\r\n              <span>{name}</span>\r\n              <img src={`https://pokeres.bastionbot.org/images/pokemon/${id}.png`} alt=\"pokemon\" width=\"120px\" height=\"120px\"/>\r\n            </a>\r\n          </div>\r\n        </li>\r\n      )\r\n    });\r\n  }\r\n\r\n  render() {\r\n\r\n    const { pokemonArr } = this.state;\r\n    \r\n    if (!pokemonArr) {\r\n      return <ShowMore morePokemon={this.showMorePokemon}/>\r\n    } else if(pokemonArr) {\r\n      const items = this.renderItems(pokemonArr);\r\n      return (\r\n        <div>\r\n          <ul className=\"row\">\r\n            {items}\r\n          </ul>\r\n          <ShowMore morePokemon={this.showMorePokemon}/>\r\n        </div>\r\n      );\r\n    }\r\n  }\r\n}\r\n","import SearchList from './search-list';\r\n\r\nexport default SearchList;","import React, {Component} from 'react';\r\n\r\nimport './search-list.css'\r\n\r\nexport default class SearchList extends Component {\r\n\r\n    state = {\r\n        term: \"\"\r\n    }\r\n\r\n    onSearchChange = e => {\r\n        const term = e.target.value;\r\n        this.setState({ term });\r\n        this.props.onSearchChange(term);\r\n    };\r\n\r\n    render() {\r\n       \r\n        return (\r\n            <input\r\n                placeholder=\"Search you'r pokemon...\"\r\n                className=\"inputSearch\"\r\n                value={this.state.term}\r\n                onChange={this.onSearchChange}\r\n            />\r\n        )\r\n    }\r\n}\r\n","import React, {Component} from 'react';\r\nimport PokemonEvolve from '../pokemon-evolve';\r\nimport PokemonDetails from '../pokemon-detalis';\r\nimport ItemList from '../item-list';\r\nimport SearchList from '../search-list';\r\nimport PokeapiService from '../../services/pokeapi-service';\r\nexport default class PokemonPage extends Component {\r\n    \r\n    pokeapiService = new PokeapiService();\r\n\r\n    state = {\r\n        id: 1,\r\n        pokemonSelected: {\r\n            pokemonId: 1,\r\n            evolveId: 1,\r\n        },\r\n        term: \"\",\r\n        pokemonList: null,\r\n        pokemonNames: null,\r\n    }\r\n\r\n    componentDidUpdate(_, prevState) {\r\n        if (this.state.id !== prevState.id) {\r\n          this.givePokemonId();\r\n        }\r\n    }\r\n\r\n    componentDidMount() {\r\n        this.givePokemonId();\r\n        this.pokeapiService\r\n        .getAllPokemon()\r\n        .then((pokemonList) => { \r\n            this.setState({\r\n                pokemonList\r\n            });\r\n        });\r\n    }\r\n\r\n    givePokemonName = () => {\r\n        this.setState(({ pokemonList }) => {\r\n          const namesArr = pokemonList.map(({name}) => {\r\n            return name;\r\n          });\r\n\r\n          return {\r\n            pokemonNames: namesArr,\r\n          }\r\n        });\r\n    }\r\n\r\n    onSearchChange = (term) => {\r\n        this.setState({ term });\r\n    }\r\n\r\n    onIdLoaded = (pokemonSelected) => { \r\n        this.setState({\r\n            pokemonSelected,\r\n        });\r\n    }\r\n\r\n    givePokemonId = () => {\r\n        const id = this.state.id;\r\n        this.pokeapiService\r\n          .getPokemonEvolveId(id)\r\n          .then(this.onIdLoaded)\r\n          .catch(this.onError)\r\n    }\r\n\r\n    onPokemonSelected = (id) => {\r\n        this.setState({\r\n            id\r\n        });\r\n    }\r\n\r\n    search = (items, term) => {\r\n        if(term.length === 0) {\r\n            return items;\r\n        }\r\n\r\n        return items.filter(item => {\r\n            return item.name.toLowerCase().indexOf(term.toLowerCase()) > -1;\r\n        });\r\n    }\r\n    \r\n    render() {\r\n        const { pokemonSelected, pokemonList, term } = this.state;\r\n        console.log(this.state.term);\r\n        const visiblesItems = this.search(pokemonList, term);\r\n\r\n        return (\r\n            <div>\r\n                <h1 className=\"central-title\">Choose you'r pokemon</h1>\r\n                <PokemonDetails selectedId={pokemonSelected.pokemonId}/>\r\n                <PokemonEvolve\r\n                evolveId={pokemonSelected.evolveId}\r\n                />\r\n                <SearchList onSearchChange={this.onSearchChange} />\r\n                <ItemList onPokemonSelected={this.onPokemonSelected} pokemonList={visiblesItems}/>\r\n            </div>\r\n        )\r\n    }\r\n}","import React, { Component } from \"react\";\r\nimport Spinner from '../spinner'\r\nimport ErrorIndicator from '../error-indicator/'\r\nimport PokeapiService from '../../services/pokeapi-service'\r\nimport \"./random-pokemon.css\";\r\n\r\nexport default class RandomPokemon extends Component {\r\n  \r\n  pokeapiService = new PokeapiService();\r\n\r\n  state = {\r\n    id: null,\r\n    pokemonData: {},\r\n    loading: true,\r\n    error: false\r\n  }\r\n\r\n  componentDidMount() {\r\n    this.updatePokemonData();\r\n  }\r\n\r\n  componentDidUpdate(prevProps) {\r\n    if (this.props.pokemonId !== prevProps.pokemonId) {\r\n      this.updatePokemonData();\r\n    }\r\n  }\r\n\r\n  onPokemonDataLoaded = (pokemonData) => {\r\n    this.setState({\r\n      pokemonData,\r\n      loading: false\r\n    });\r\n  }\r\n  \r\n  updatePokemonData = () => {\r\n    const id = this.props.pokemonId;\r\n    this.setState({id});\r\n    this.pokeapiService\r\n      .getPokemonData(id)\r\n      .then(this.onPokemonDataLoaded)\r\n      .catch(this.props.error);\r\n  }\r\n\r\n  \r\n  render() {\r\n    \r\n    const { loading, error, pokemonData, id } = this.state;\r\n    const hasData = !(loading || error);\r\n    const errorMessage = error ? <ErrorIndicator /> : null;\r\n    const spinner = loading ? <Spinner /> : null;\r\n    const content = hasData ? <PokemonView pokemonData={pokemonData} pokemonId={id}/> : null;\r\n    return (\r\n      <div className=\"random-pokemon card\">\r\n        {errorMessage}\r\n        {spinner}\r\n        {content}\r\n      </div>\r\n    )\r\n\r\n  }\r\n}\r\n\r\nconst PokemonView = ({pokemonData, pokemonId}) => {\r\n  const { height, weight, abilities, types, name } = pokemonData;\r\n  return (\r\n    <React.Fragment >\r\n    <div className=\"random-pokemon d-flex\">\r\n      <div className=\"pokemon-img\">\r\n        <img src={`https://pokeres.bastionbot.org/images/pokemon/${pokemonId}.png`} width=\"150px\" heihgt=\"150px\" alt=\"Pokemon\"/>\r\n      </div>\r\n      <div className=\"pokemon-detalis\">\r\n        <h4>Name: {name}</h4>\r\n        <ul>\r\n          <li>Height: {height}</li>\r\n          <li>Width: {weight}</li>\r\n          <li>Abilities: <span className=\"text-warning\">{abilities}</span></li>\r\n          <li>Types: <span className=\"text-warning\">{types}</span></li>\r\n        </ul>\r\n      </div>\r\n    </div>\r\n    </React.Fragment>\r\n  );\r\n}\r\n","import RandomPokemon from './random-pokemon';\r\n\r\nexport default RandomPokemon;","import React, {Component} from 'react'\r\nimport RandomPokemon from '../random-pokemon'\r\nimport PokemonEvolve from '../pokemon-evolve'\r\nimport PokeapiService from '../../services/pokeapi-service'\r\nimport Spinner from '../spinner'\r\nexport default class RandomPokemonPage extends Component {\r\n\r\n    pokeapiService = new PokeapiService();\r\n\r\n    state = {\r\n        id: {\r\n            pokemonId: 1,\r\n            evolveId: 1,\r\n        },\r\n        loading: true,\r\n    }\r\n\r\n    componentDidMount() {\r\n        this.givePokemonId();\r\n        this.interval = setInterval(this.givePokemonId, 10000);\r\n    }\r\n    \r\n    componentWillUnmount() {\r\n        clearInterval(this.interval);\r\n    }\r\n\r\n    onIdLoaded = (id) => {\r\n        this.setState({\r\n          id,\r\n          loading: false\r\n        });\r\n    }\r\n\r\n    givePokemonId = () => {\r\n        const id = Math.floor(Math.random()*105) + 2;\r\n        this.pokeapiService\r\n          .getPokemonEvolveId(id)\r\n          .then(this.onIdLoaded)\r\n    }\r\n\r\n    render() {\r\n\r\n        const { id, loading } = this.state;\r\n\r\n        if (loading) {\r\n            return <Spinner />\r\n        }\r\n\r\n        return (\r\n            <div>\r\n                <h1 className=\"central-title\">Welcome to Pokedex app</h1>\r\n                <RandomPokemon\r\n                pokemonId={id.pokemonId}\r\n                error={this.state.error}\r\n                />\r\n                <PokemonEvolve\r\n                evolveId={id.evolveId}\r\n                onError={this.onError}\r\n                />\r\n                {/* <SearchList /> */}\r\n            </div>\r\n        )\r\n    }\r\n}","import React from 'react'\r\n\r\nconst {\r\n    Provider : PokeServiceProvider,\r\n    Consumer : PokeServiceConsumer\r\n} = React.createContext();\r\n\r\nexport {\r\n    PokeServiceProvider,\r\n    PokeServiceConsumer\r\n}","import App from './app'\r\n\r\nexport default App","import React, { Component } from \"react\";\r\nimport PokeapiService from '../../services/pokeapi-service'\r\nimport Header from '../header'\r\nimport ErrorBoundry from '../error-boundry'\r\nimport { PokemonPage, RandomPokemonPage } from '../pages'\r\nimport { PokeServiceProvider } from '../pokemon-service-context'\r\nimport { BrowserRouter as Router, Route, Switch } from 'react-router-dom'\r\nimport './app.css'\r\n\r\nexport default class App extends Component {\r\n\r\n  state = {\r\n    pokeapiService: new PokeapiService(),\r\n    loading: true,\r\n    error: false,\r\n  }\r\n\r\n  onError = (err) => {\r\n    this.setState({\r\n      error: true,\r\n      loading: false,\r\n    })\r\n  }\r\n\r\n  render() {\r\n    \r\n    return (\r\n      <ErrorBoundry>\r\n        <PokeServiceProvider value={this.state.pokeapiService}>\r\n          <Router>\r\n            <div className=\"container\">\r\n              <Header/>\r\n              <Switch>\r\n                <Route path=\"/\" \r\n                        component={RandomPokemonPage}\r\n                        exact />\r\n                <Route path=\"/pokemons/\" \r\n                        component={PokemonPage}\r\n                        />\r\n                <Route render={() => <h1 className=\"central-title\">Page not found !</h1>} />\r\n              </Switch>\r\n            </div>\r\n          </Router>\r\n        </PokeServiceProvider>\r\n      </ErrorBoundry>\r\n    );\r\n  }\r\n}\r\n","import React from 'react'\r\nimport ReactDOM from 'react-dom'\r\nimport App from './components/app'\r\nimport './style.css'\r\n\r\n\r\nReactDOM.render(<App />, document.getElementById(\"root\"));"],"sourceRoot":""}